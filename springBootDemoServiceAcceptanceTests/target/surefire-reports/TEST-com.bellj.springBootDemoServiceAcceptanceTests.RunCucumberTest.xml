<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.bellj.springBootDemoServiceAcceptanceTests.RunCucumberTest" time="9.101" tests="6" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="19"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/test-classes:/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/classes:/home/bellj/.m2/repository/io/cucumber/cucumber-java/7.15.0/cucumber-java-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-core/7.15.0/cucumber-core-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-gherkin/7.15.0/cucumber-gherkin-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.15.0/cucumber-gherkin-messages-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/gherkin/26.2.0/gherkin-26.2.0.jar:/home/bellj/.m2/repository/io/cucumber/messages/22.0.0/messages-22.0.0.jar:/home/bellj/.m2/repository/io/cucumber/tag-expressions/6.0.0/tag-expressions-6.0.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-expressions/17.0.1/cucumber-expressions-17.0.1.jar:/home/bellj/.m2/repository/io/cucumber/datatable/7.15.0/datatable-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-plugin/7.15.0/cucumber-plugin-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/docstring/7.15.0/docstring-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/html-formatter/20.4.0/html-formatter-20.4.0.jar:/home/bellj/.m2/repository/io/cucumber/junit-xml-formatter/0.2.0/junit-xml-formatter-0.2.0.jar:/home/bellj/.m2/repository/io/cucumber/ci-environment/10.0.0/ci-environment-10.0.0.jar:/home/bellj/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.15.0/cucumber-junit-platform-engine-7.15.0.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/bellj/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite/1.10.1/junit-platform-suite-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite-api/1.10.1/junit-platform-suite-api-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.10.1/junit-platform-suite-engine-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.10.1/junit-platform-suite-commons-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.1/junit-platform-launcher-1.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/bellj/.m2/repository/io/rest-assured/rest-assured/5.4.0/rest-assured-5.4.0.jar:/home/bellj/.m2/repository/org/apache/groovy/groovy/4.0.16/groovy-4.0.16.jar:/home/bellj/.m2/repository/org/apache/groovy/groovy-xml/4.0.16/groovy-xml-4.0.16.jar:/home/bellj/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/home/bellj/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/home/bellj/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/bellj/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/home/bellj/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/home/bellj/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/bellj/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/home/bellj/.m2/repository/io/rest-assured/json-path/5.4.0/json-path-5.4.0.jar:/home/bellj/.m2/repository/org/apache/groovy/groovy-json/4.0.16/groovy-json-4.0.16.jar:/home/bellj/.m2/repository/io/rest-assured/rest-assured-common/5.4.0/rest-assured-common-5.4.0.jar:/home/bellj/.m2/repository/io/rest-assured/xml-path/5.4.0/xml-path-5.4.0.jar:/home/bellj/.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/home/bellj/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/home/bellj/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/bellj/.m2/repository/com/mysql/mysql-connector-j/8.3.0/mysql-connector-j-8.3.0.jar:/home/bellj/.m2/repository/com/google/protobuf/protobuf-java/3.25.1/protobuf-java-3.25.1.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="user.timezone" value="Europe/London"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-19-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/surefire/surefirebooter-20240225212221835_3.jar /mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/surefire 2024-02-25T21-22-21_718-jvmRun1 surefire-20240225212221835_1tmp surefire_0-20240225212221835_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/test-classes:/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/classes:/home/bellj/.m2/repository/io/cucumber/cucumber-java/7.15.0/cucumber-java-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-core/7.15.0/cucumber-core-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-gherkin/7.15.0/cucumber-gherkin-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.15.0/cucumber-gherkin-messages-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/gherkin/26.2.0/gherkin-26.2.0.jar:/home/bellj/.m2/repository/io/cucumber/messages/22.0.0/messages-22.0.0.jar:/home/bellj/.m2/repository/io/cucumber/tag-expressions/6.0.0/tag-expressions-6.0.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-expressions/17.0.1/cucumber-expressions-17.0.1.jar:/home/bellj/.m2/repository/io/cucumber/datatable/7.15.0/datatable-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-plugin/7.15.0/cucumber-plugin-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/docstring/7.15.0/docstring-7.15.0.jar:/home/bellj/.m2/repository/io/cucumber/html-formatter/20.4.0/html-formatter-20.4.0.jar:/home/bellj/.m2/repository/io/cucumber/junit-xml-formatter/0.2.0/junit-xml-formatter-0.2.0.jar:/home/bellj/.m2/repository/io/cucumber/ci-environment/10.0.0/ci-environment-10.0.0.jar:/home/bellj/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/bellj/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.15.0/cucumber-junit-platform-engine-7.15.0.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/bellj/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite/1.10.1/junit-platform-suite-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite-api/1.10.1/junit-platform-suite-api-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.10.1/junit-platform-suite-engine-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.10.1/junit-platform-suite-commons-1.10.1.jar:/home/bellj/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.1/junit-platform-launcher-1.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/bellj/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/bellj/.m2/repository/io/rest-assured/rest-assured/5.4.0/rest-assured-5.4.0.jar:/home/bellj/.m2/repository/org/apache/groovy/groovy/4.0.16/groovy-4.0.16.jar:/home/bellj/.m2/repository/org/apache/groovy/groovy-xml/4.0.16/groovy-xml-4.0.16.jar:/home/bellj/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/home/bellj/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/home/bellj/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/bellj/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/home/bellj/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/home/bellj/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/bellj/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/home/bellj/.m2/repository/io/rest-assured/json-path/5.4.0/json-path-5.4.0.jar:/home/bellj/.m2/repository/org/apache/groovy/groovy-json/4.0.16/groovy-json-4.0.16.jar:/home/bellj/.m2/repository/io/rest-assured/rest-assured-common/5.4.0/rest-assured-common-5.4.0.jar:/home/bellj/.m2/repository/io/rest-assured/xml-path/5.4.0/xml-path-5.4.0.jar:/home/bellj/.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/home/bellj/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/home/bellj/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/bellj/.m2/repository/com/mysql/mysql-connector-j/8.3.0/mysql-connector-j-8.3.0.jar:/home/bellj/.m2/repository/com/google/protobuf/protobuf-java/3.25.1/protobuf-java-3.25.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/bellj"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="/usr/lib/jvm/java-19-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests/target/surefire/surefirebooter-20240225212221835_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="19.0.2+7-Ubuntu-0ubuntu322.04"/>
    <property name="user.name" value="bellj"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="5.15.133.1-microsoft-standard-WSL2"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/bellj/.m2/repository"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="19.0.2"/>
    <property name="user.dir" value="/mnt/e/Development/GitHub/spring-boot-react-example-app/springBootDemoServiceAcceptanceTests"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="19.0.2+7-Ubuntu-0ubuntu322.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="63.0"/>
  </properties>
  <testcase name="Can fetch empty clients" classname="An example" time="1.583">
    <system-out><![CDATA[
Scenario: Can fetch empty clients                 &amp#27;[90m# features/example.feature:7&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mno clients are registered in the database&amp#27;[0m &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.noClientsExist()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma GET request is sent to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/clients"&amp#27;[0m        &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.sendGetRequest(java.lang.String)&amp#27;[0m
[]
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe responseBody matches &amp#27;[0m&amp#27;[32m&amp#27;[1m"[]"&amp#27;[0m              &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseBodyMatches(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe responseCode is &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                     &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseCodeMatches(java.lang.Integer)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Can fetch all known clients" classname="An example" time="1.689">
    <system-out><![CDATA[
Scenario: Can fetch all known clients                                                                                                                                                                                &amp#27;[90m# features/example.feature:12&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mno clients are registered in the database&amp#27;[0m                                                                                                                                                                    &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.noClientsExist()&amp#27;[0m
1, test_name, test_email
2, test_name, test_email
3, test_name, test_email
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m clients are registered in the database&amp#27;[0m                                                                                                                                                                     &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.registerClients(int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma GET request is sent to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/clients"&amp#27;[0m                                                                                                                                                                           &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.sendGetRequest(java.lang.String)&amp#27;[0m
[{"id":1,"name":"test_name","email":"test_email"},{"id":2,"name":"test_name","email":"test_email"},{"id":3,"name":"test_name","email":"test_email"}]
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe responseBody matches &amp#27;[0m&amp#27;[32m&amp#27;[1m"[{\"id\":1,\"name\":\"test_name\",\"email\":\"test_email\"},{\"id\":2,\"name\":\"test_name\",\"email\":\"test_email\"},{\"id\":3,\"name\":\"test_name\",\"email\":\"test_email\"}]"&amp#27;[0m &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseBodyMatches(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe responseCode is &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                                                                                                                        &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseCodeMatches(java.lang.Integer)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Can get by ID" classname="An example" time="1.603">
    <system-out><![CDATA[
Scenario: Can get by ID                                                                      &amp#27;[90m# features/example.feature:19&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mno clients are registered in the database&amp#27;[0m                                            &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.noClientsExist()&amp#27;[0m
1, test_name, test_email
2, test_name, test_email
3, test_name, test_email
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m clients are registered in the database&amp#27;[0m                                             &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.registerClients(int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma GET request is sent to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/clients/2"&amp#27;[0m                                                 &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.sendGetRequest(java.lang.String)&amp#27;[0m
{"id":2,"name":"test_name","email":"test_email"}
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe responseBody matches &amp#27;[0m&amp#27;[32m&amp#27;[1m"{\"id\":2,\"name\":\"test_name\",\"email\":\"test_email\"}"&amp#27;[0m &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseBodyMatches(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe responseCode is &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseCodeMatches(java.lang.Integer)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Can create a new user" classname="An example" time="0.56">
    <system-out><![CDATA[
Scenario: Can create a new user                                                              &amp#27;[90m# features/example.feature:25&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mno clients are registered in the database&amp#27;[0m                                            &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.noClientsExist()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma POST request is sent to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/clients"&amp#27;[0m&amp#27;[32m with the body&amp#27;[0m                                    &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.sendPostRequestWithBody(java.lang.String,java.lang.String)&amp#27;[0m
{"id":1,"name":"test_name","email":"test_email"}
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe responseBody matches &amp#27;[0m&amp#27;[32m&amp#27;[1m"{\"id\":1,\"name\":\"test_name\",\"email\":\"test_email\"}"&amp#27;[0m &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseBodyMatches(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe responseCode is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseCodeMatches(java.lang.Integer)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Can update a user" classname="An example" time="1.235">
    <system-out><![CDATA[
Scenario: Can update a user                                                                          &amp#27;[90m# features/example.feature:33&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mno clients are registered in the database&amp#27;[0m                                                    &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.noClientsExist()&amp#27;[0m
1, test_name, test_email
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m clients are registered in the database&amp#27;[0m                                                     &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.registerClients(int)&amp#27;[0m
Sending to http://localhost:8080/clients/1
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma PUT request is sent to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/clients"&amp#27;[0m&amp#27;[32m with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with body&amp#27;[0m                                       &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.sendPutRequestWithBody(java.lang.String,java.lang.Integer,java.lang.String)&amp#27;[0m
{"id":1,"name":"new_test_name","email":"new_test_email"}
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe responseBody matches &amp#27;[0m&amp#27;[32m&amp#27;[1m"{\"id\":1,\"name\":\"new_test_name\",\"email\":\"new_test_email\"}"&amp#27;[0m &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseBodyMatches(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe responseCode is &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                        &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseCodeMatches(java.lang.Integer)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Can delete a user" classname="An example" time="1.062">
    <system-out><![CDATA[
Scenario: Can delete a user                             &amp#27;[90m# features/example.feature:42&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mno clients are registered in the database&amp#27;[0m       &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.noClientsExist()&amp#27;[0m
1, test_name, test_email
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32m&amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m clients are registered in the database&amp#27;[0m        &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.registerClients(int)&amp#27;[0m
Sending to http://localhost:8080/clients/1
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma DELETE request is sent to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/clients"&amp#27;[0m&amp#27;[32m with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.sendDeleteRequest(java.lang.String,java.lang.Integer)&amp#27;[0m

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe responseBody matches &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m                      &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseBodyMatches(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe responseCode is &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                           &amp#27;[90m# com.bellj.springBootDemoServiceAcceptanceTests.StepDefinitions.responseCodeMatches(java.lang.Integer)&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>